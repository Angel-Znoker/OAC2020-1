library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_ARITH.all;
use IEEE.STD_LOGIC_UNSIGNED.all;

entity practica2 is
	port(clk, E : in STD_LOGIC;
			S : out STD_LOGIC);
end practica2;

architecture Behavioral of practica2 is
	type estados is (S0, S1, S2, S3);
	signal presente : estados;
	
	process(clk)
	begin
		if rising_edge(clk) then
			case presente is
				when S0 =>
						S <= '0';
						if E = '0' then 
							presente <= S0;
						else
							presente <= S1;
						end if;
				
				when S1 =>
						S <= '0';
						if E = '0' then 
							presente <= S0;
						else
							presente <= S2;
						end if;
				
				when S2 =>
						S <= '0';
						if E = '0' then 
							presente <= S0;
						else
							presente <= S3;
						end if;
				
				when S3 =>
						S <= '1';
						if E = '0' then 
							presente <= S0;
						else
							presente <= S3;
						end if;
			end case;
		end if;
	end process;
end Behavioral;