library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity u_detencion is
	Port( 
			SelSrc		: in STD_LOGIC_VECTOR (2 downto 0);
			MemWE4		: in STD_LOGIC;
			SelRegR		: in STD_LOGIC_VECTOR(3 downto 0);
			SelRegWE2	: in STD_LOGIC_VECTOR(2 downto 0);
			SelRegWE3	: in STD_LOGIC_VECTOR(2 downto 0);
			PCWrite		: out STD_LOGIC := '1';
			IFIDWrite	: out STD_LOGIC := '1';
			SelCtrl		: out STD_LOGIC := '0';
			SelD		: out STD_LOGIC:='0');
end u_detencion;

architecture Behavioral of u_detencion is

begin
	process (SelSrc, MemWE4, SelRegR, SelRegWE2, SelRegWE3) begin
		-- riesgos por accesos m√∫ltiples a memoria
		if (SelSrc = "010" or SelSrc = "100" or SelSrc = "110") and MemWE4 = '1' then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '1';
			SelCtrl <= '1';	
		elsif (SelSrc = "010" or SelSrc = "100" or SelSrc = "110") and MemWE4 = '0' then
			PCWrite <= '1';
			IFIDWrite <= '1';
			SelD <= '0';
			SelCtrl <= '0';
		-- riesgos por dependencia de datos
		elsif SelRegR = "0001" and (SelRegWE2 = "001" or SelRegWE2 = "100" or SelRegWE3 = "001" or SelRegWE3 = "100") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "0010" and (SelRegWE2 = "010" or SelRegWE2 = "100" or SelRegWE3 = "010" or SelRegWE3 = "100") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "0011" and (SelRegWE2 = "011" or SelRegWE2 = "100" or SelRegWE3 = "011" or SelRegWE3 = "100") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "0100" and (SelRegWE2 = "001" or SelRegWE3 = "001") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "0101" and (SelRegWE2 = "100" or SelRegWE3 = "100") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "0110" and (SelRegWE2 = "001" or SelRegWE2 = "010" or SelRegWE3 = "001" or SelRegWE3 = "010") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "0111" and (SelRegWE2 = "001" or SelRegWE2 = "011" or SelRegWE3 = "001" or SelRegWE3 = "011") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "1000" and (SelRegWE2 = "101" or SelRegWE3 = "101") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "1001" and (SelRegWE2 = "010" or SelRegWE3 = "010") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "1010" and (SelRegWE2 = "011" or SelRegWE3 = "011") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "1011" and (SelRegWE2 = "110" or SelRegWE3 = "110") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "1100" and (SelRegWE2 = "001" or SelRegWE2 = "110" or SelRegWE3 = "001" or SelRegWE3 = "110") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "1101" and (SelRegWE2 = "100" or SelRegWE2 = "110" or SelRegWE3 = "100" or SelRegWE3 = "110") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "1110" and (SelRegWE2 = "010" or SelRegWE2 = "110" or SelRegWE3 = "010" or SelRegWE3 = "110") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		elsif SelRegR = "1111" and (SelRegWE2 = "011" or SelRegWE2 = "110" or SelRegWE3 = "011" or SelRegWE3 = "110") then
			PCWrite <= '0';
			IFIDWrite <= '0';
			SelD <= '0';
			SelCtrl <= '1';
		else
			PCWrite <= '1';
			IFIDWrite <= '1';
			SelD <= '0';
			SelCtrl <= '0';
		end if;

	end process;

	
end Behavioral;
